#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 1949 0 26 3 12 #"#lang racket"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 22 3 1 #" "
0 0 15 3 10 #"defgeneric"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 22 3 1 #" "
0 0 15 3 9 #"defmethod"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 22 3 1 #" "
0 0 15 3 10 #"defsubtype"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 22 3 1 #" "
0 0 14 3 27 #"generic-function-parameters"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 22 3 1 #" "
0 0 14 3 24 #"generic-function-methods"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 22 3 1 #" "
0 0 14 3 12 #"method-types"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 22 3 1 #" "
0 0 15 3 14 #"def-my-subtype"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 14 3 12 #"racket/trace"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 31 #"; Hash para representar o grafo"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-graph"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 21 #"; Definir um subtipo "
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 15 3 10 #"defsubtype"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 3 #" (("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-graph"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 3 #"))("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 20 #"check-possible-cycle"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 5 #"))) ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-graph"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"        (("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 20 #"check-possible-cycle"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 4 #")) ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-graph"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"error"
0 0 22 3 1 #" "
0 0 19 3 29 #"\"Wrong definition of subtype\""
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 62
#"; Definir um subtipo (possivelmente com multiplos super tipos)"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 15 3 14 #"def-my-subtype"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 3 #" (("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-graph"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 3 #"))("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 20 #"check-possible-cycle"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 5 #"))) ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-graph"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"        (("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 20 #"check-possible-cycle"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 4 #")) ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-graph"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-graph"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"error"
0 0 22 3 1 #" "
0 0 19 3 29 #"\"Wrong definition of subtype\""
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 72
(
 #"; Verificar se existe possibilidade de haver um ciclo ap\303\263s a "
 #"inser\303\247\303\243o"
) 0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 20 #"check-possible-cycle"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 15 #"check-cycle-aux"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 1 #" "
0 0 14 3 11 #"parents-lst"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 22 3 3 #" (("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 11 #"parents-lst"
0 0 22 3 1 #")"
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"          (("
0 0 14 3 3 #"eq?"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 11 #"parents-lst"
0 0 22 3 3 #")) "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"          (("
0 0 14 3 13 #"hash-has-key?"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-graph"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 11 #"parents-lst"
0 0 22 3 3 #"))("
0 0 14 3 2 #"or"
0 0 22 3 2 #" ("
0 0 14 3 15 #"check-cycle-aux"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-graph"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 11 #"parents-lst"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 62
#"                                                             ("
0 0 14 3 15 #"check-cycle-aux"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 11 #"parents-lst"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 15 #"check-cycle-aux"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 11 #"parents-lst"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-graph"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 15 #"check-cycle-aux"
0 0 22 3 1 #" "
0 0 14 3 5 #"child"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 10 #"type-graph"
0 0 22 3 1 #" "
0 0 14 3 6 #"parent"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 49
#";; Estrutura para representar fun\303\247\303\265es genericas"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 22 3 1 #" "
0 0 14 3 16 #"generic-function"
0 0 22 3 2 #" ("
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 10 #"parameters"
0 0 22 3 1 #" "
0 0 14 3 10 #"args-order"
0 0 22 3 1 #" "
0 0 14 3 16 #"combination-proc"
0 0 22 3 23 #") #:mutable #:property "
0 0 14 3 14 #"prop:procedure"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 1 #"f"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 11 #"params-list"
0 0 22 3 3 #") ("
0 0 14 3 25 #"generic-function-protocol"
0 0 22 3 2 #" ("
0 0 14 3 33 #"get-concrete-methods-from-generic"
0 0 22 3 2 #" ("
0 0 14 3 21 #"generic-function-name"
0 0 22 3 1 #" "
0 0 14 3 1 #"f"
0 0 22 3 3 #")) "
0 0 14 3 11 #"params-list"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 38 #";; Estrutura para representar m\303\251todos"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 22 3 1 #" "
0 0 14 3 15 #"concrete-method"
0 0 22 3 2 #" ("
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 5 #"types"
0 0 22 3 1 #" "
0 0 14 3 4 #"role"
0 0 22 3 1 #" "
0 0 14 3 4 #"func"
0 0 22 3 1 #" "
0 0 14 3 13 #"types-ordered"
0 0 22 3 1 #" "
0 0 14 3 16 #"combination-proc"
0 0 22 3 14 #") #:mutable)  "
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 16 #";; Methods Roles"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"arround"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #":arround"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 5 #"after"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #":after"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"before"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #":before"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 60
#";; Tabela de metodos genericos: referencia metodos concretos"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 23 #"generic-functions-table"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 39 #";; Tabela de todos os metodos concretos"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 22 #"concrete-methods-table"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 29 #";; Lista de metodos concretos"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 3 #") ("
0 0 14 3 4 #"list"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 50 #";; Get Concrete Methods from generic function name"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 33 #"get-concrete-methods-from-generic"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 23 #"generic-functions-table"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 55 #";; Get Concrete Role Methods from concrete-methods-list"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 46 #"get-arround-methods-from-concrete-methods-list"
0 0 22 3 1 #" "
0 0 14 3 4 #"role"
0 0 22 3 1 #" "
0 0 14 3 12 #"concrete-lst"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (("
0 0 14 3 8 #"role-lst"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 6 #"method"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 22 3 1 #" "
0 0 14 3 4 #"role"
0 0 22 3 2 #" ("
0 0 14 3 20 #"concrete-method-role"
0 0 22 3 1 #" "
0 0 14 3 6 #"method"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 8 #"role-lst"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 6 #"method"
0 0 22 3 1 #" "
0 0 14 3 8 #"role-lst"
0 0 22 3 6 #" )))) "
0 0 14 3 12 #"concrete-lst"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 14 3 8 #"role-lst"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                        "
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                       "
0 0 22 29 1 #"\n"
0 7         457 4           0 0           0 75 0 22 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (("
0 0 14 3 11 #"arround-lst"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 23 #"get-arround-methods-aux"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 22 3 3 #" (("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"          (("
0 0 14 3 3 #"eq?"
0 0 22 3 1 #" "
0 0 14 3 4 #"role"
0 0 22 3 2 #" ("
0 0 14 3 20 #"concrete-method-role"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 5 #"))) ("
0 0 15 3 5 #"begin"
0 0 22 3 2 #" ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 11 #"arround-lst"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 2 #") "
0 0 14 3 11 #"arround-lst"
0 0 22 3 4 #")) ("
0 0 14 3 23 #"get-arround-methods-aux"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 23 #"get-arround-methods-aux"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 23 #"get-arround-methods-aux"
0 0 22 3 1 #" "
0 0 14 3 12 #"concrete-lst"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 14 3 11 #"arround-lst"
0 0 22 3 9 #"))       "
0           0 0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 29 #";; Metodos da funcao generica"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 24 #"generic-function-methods"
0 0 22 3 1 #" "
0 0 14 3 8 #"function"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 23 #"generic-functions-table"
0 0 22 3 2 #" ("
0 0 14 3 21 #"generic-function-name"
0 0 22 3 1 #" "
0 0 14 3 8 #"function"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 23 #";; Predicados do metodo"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 12 #"method-types"
0 0 22 3 1 #" "
0 0 14 3 21 #"concrete-method-types"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 42 #";; Regra para definir o comando defgeneric"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 22 3 1 #" "
0 0 15 3 10 #"defgeneric"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 22 3 3 #" ()"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 15 3 10 #"defgeneric"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 5 #"begin"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 16 #"generic-function"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 23 #"generic-functions-table"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 15 3 10 #"defgeneric"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 3 #") ("
0 0 14 3 26 #":argument-precedence-order"
0 0 22 3 1 #" "
0 0 14 3 10 #"args-order"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 5 #"begin"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 16 #"generic-function"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 10 #"args-order"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 23 #"generic-functions-table"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 15 3 10 #"defgeneric"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 3 #") ("
0 0 14 3 19 #":method-combination"
0 0 22 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 5 #"begin"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 16 #"generic-function"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 9 #"procedure"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 23 #"generic-functions-table"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 15 3 10 #"defgeneric"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 3 #") ("
0 0 14 3 26 #":argument-precedence-order"
0 0 22 3 1 #" "
0 0 14 3 10 #"args-order"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 19 #":method-combination"
0 0 22 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 5 #"begin"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 16 #"generic-function"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 10 #"args-order"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 9 #"procedure"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 23 #"generic-functions-table"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 6 #")))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 61
#";; Verificar/Actualizar a ordem de precedencia nos argumentos"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 16 #"check-args-order"
0 0 22 3 1 #" "
0 0 14 3 5 #"types"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 10 #"args-order"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (["
0 0 14 3 10 #"hash-types"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"check-aux"
0 0 22 3 1 #" "
0 0 14 3 4 #"hash"
0 0 22 3 1 #" "
0 0 14 3 10 #"args-order"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 10 #"args-order"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"          "
0 0 14 3 5 #"empty"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 4 #"hash"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 10 #"args-order"
0 0 22 3 4 #")) ("
0 0 14 3 9 #"check-aux"
0 0 22 3 1 #" "
0 0 14 3 4 #"hash"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 10 #"args-order"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 10 #"args-order"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"        "
0 0 14 3 5 #"types"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 15 3 5 #"begin"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 10 #"hash-types"
0 0 22 3 2 #" ("
0 0 14 3 11 #"insert-hash"
0 0 22 3 1 #" "
0 0 14 3 10 #"hash-types"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 5 #"types"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 14 3 9 #"check-aux"
0 0 22 3 1 #" "
0 0 14 3 10 #"hash-types"
0 0 22 3 1 #" "
0 0 14 3 10 #"args-order"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 45 #";; Inserir cada elemento das listas numa hash"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 11 #"insert-hash"
0 0 22 3 1 #" "
0 0 14 3 4 #"hash"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 5 #"types"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"      "
0 0 14 3 4 #"hash"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 5 #"begin"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 4 #"hash"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 3 #") ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 5 #"types"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 11 #"insert-hash"
0 0 22 3 1 #" "
0 0 14 3 4 #"hash"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 5 #"types"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 81
(
 #";; Remover o metodo da lista de metodos em caso de ser necessaria um"
 #"a redefinicao"
) 0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 32 #"remove-method-from-concrete-list"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 5 #"types"
0 0 22 3 1 #" "
0 0 14 3 12 #"methods-list"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (("
0 0 14 3 3 #"lst"
0 0 22 3 1 #" "
0 0 14 3 12 #"methods-list"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"remove-aux"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 5 #"types"
0 0 22 3 1 #" "
0 0 14 3 16 #"methods-list-aux"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 22 3 2 #" ("
0 0 14 3 20 #"concrete-method-name"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 16 #"methods-list-aux"
0 0 22 3 3 #")) "
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 16 #"               ("
0 0 14 3 6 #"equal?"
0 0 22 3 2 #" ("
0 0 14 3 21 #"concrete-method-types"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 16 #"methods-list-aux"
0 0 22 3 3 #")) "
0 0 14 3 5 #"types"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 16 #"methods-list-aux"
0 0 22 3 2 #") "
0 0 14 3 12 #"methods-list"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 14 3 10 #"remove-aux"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 5 #"types"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 16 #"methods-list-aux"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 10 #"remove-aux"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 5 #"types"
0 0 22 3 1 #" "
0 0 14 3 12 #"methods-list"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 14 3 3 #"lst"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 41 #";; Regra para definir o comando defmethod"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 22 3 1 #" "
0 0 15 3 9 #"defmethod"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 12 #"syntax-rules"
0 0 22 3 3 #" ()"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 15 3 9 #"defmethod"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 3 #" (("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 4 #"type"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 4 #"let*"
0 0 22 3 3 #" (["
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 2 #" ("
0 0 14 3 33 #"get-concrete-methods-from-generic"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ["
0 0 14 3 13 #"types-ordered"
0 0 22 3 2 #" ("
0 0 14 3 16 #"check-args-order"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 3 #") ("
0 0 14 3 27 #"generic-function-args-order"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ["
0 0 14 3 10 #"new-method"
0 0 22 3 2 #" ("
0 0 14 3 15 #"concrete-method"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 13 #"types-ordered"
0 0 22 3 2 #" ("
0 0 14 3 33 #"generic-function-combination-proc"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ["
0 0 14 3 10 #"method-key"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 4 #"type"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 22 3 1 #" "
0 0 14 3 22 #"concrete-methods-table"
0 0 22 3 1 #" "
0 0 14 3 10 #"method-key"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 15 3 5 #"begin"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 23 #"generic-functions-table"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 10 #"new-method"
0 0 22 3 1 #" "
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 22 #"concrete-methods-table"
0 0 22 3 1 #" "
0 0 14 3 10 #"method-key"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 15 3 5 #"begin"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 2 #" ("
0 0 14 3 32 #"remove-method-from-concrete-list"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 23 #"generic-functions-table"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 10 #"new-method"
0 0 22 3 1 #" "
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 22 #"concrete-methods-table"
0 0 22 3 1 #" "
0 0 14 3 10 #"method-key"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 6 #")))))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 15 3 9 #"defmethod"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 7 #":around"
0 0 22 3 3 #" (("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 4 #"type"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 15 3 4 #"let*"
0 0 22 3 3 #" (["
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 2 #" ("
0 0 14 3 33 #"get-concrete-methods-from-generic"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ["
0 0 14 3 13 #"types-ordered"
0 0 22 3 2 #" ("
0 0 14 3 16 #"check-args-order"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 3 #") ("
0 0 14 3 27 #"generic-function-args-order"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ["
0 0 14 3 10 #"new-method"
0 0 22 3 2 #" ("
0 0 14 3 15 #"concrete-method"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 7 #"arround"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 13 #"types-ordered"
0 0 22 3 2 #" ("
0 0 14 3 33 #"generic-function-combination-proc"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ["
0 0 14 3 10 #"method-key"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 4 #"type"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 22 3 1 #" "
0 0 14 3 22 #"concrete-methods-table"
0 0 22 3 1 #" "
0 0 14 3 10 #"method-key"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 15 3 5 #"begin"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 23 #"generic-functions-table"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 10 #"new-method"
0 0 22 3 1 #" "
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 22 #"concrete-methods-table"
0 0 22 3 1 #" "
0 0 14 3 10 #"method-key"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 15 3 5 #"begin"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 2 #" ("
0 0 14 3 32 #"remove-method-from-concrete-list"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 1 #"("
0 0 26 3 1 #","
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 23 #"generic-functions-table"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 10 #"new-method"
0 0 22 3 1 #" "
0 0 14 3 21 #"concrete-methods-list"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 9 #"hash-set!"
0 0 22 3 1 #" "
0 0 14 3 22 #"concrete-methods-table"
0 0 22 3 1 #" "
0 0 14 3 10 #"method-key"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 6 #")))))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 15 3 9 #"defmethod"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 6 #":after"
0 0 22 3 3 #" (("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 4 #"type"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 7 #"display"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 15 3 9 #"defmethod"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 7 #":before"
0 0 22 3 3 #" (("
0 0 14 3 6 #"params"
0 0 22 3 1 #" "
0 0 14 3 4 #"type"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #") "
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 7 #"display"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 29 1 #"\n"
0 0 17 3 28 #";; Generic function protocol"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 25 #"generic-function-protocol"
0 0 22 3 1 #" "
0 0 14 3 12 #"methods-list"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 22 3 3 #" (("
0 0 14 3 18 #"methods-applicable"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 39 #";; Verificar se um m\303\251todo \303\251 aplicavel"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 24 #"verify-applicable-method"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #" "
0 0 14 3 10 #"params-lst"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 22 3 3 #" (("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 2 #")("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 10 #"params-lst"
0 0 22 3 2 #"))"
0 0 20 3 3 #"'#t"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"            (("
0 0 15 3 13 #"with-handlers"
0 0 22 3 3 #" (["
0 0 14 3 9 #"exn:fail?"
0 0 22 29 1 #"\n"
0 0 22 3 31 #"                              ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 4 #"expr"
0 0 22 3 2 #") "
0 0 20 3 2 #"#f"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 17 #"               (("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 2 #")("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 10 #"params-lst"
0 0 22 3 5 #"))) ("
0 0 14 3 24 #"verify-applicable-method"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 10 #"params-lst"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ("
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 20 3 3 #"'#f"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 39 #";; Devolver todos os metodos aplicaveis"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 22 #"get-applicable-methods"
0 0 22 3 1 #" "
0 0 14 3 8 #"meth-lst"
0 0 22 3 1 #" "
0 0 14 3 10 #"params-lst"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 8 #"meth-lst"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"          "
0 0 14 3 18 #"methods-applicable"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 24 #"verify-applicable-method"
0 0 22 3 2 #" ("
0 0 14 3 21 #"concrete-method-types"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 8 #"meth-lst"
0 0 22 3 3 #")) "
0 0 14 3 10 #"params-lst"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 15 3 5 #"begin"
0 0 22 29 1 #"\n"
0 0 22 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 22 3 1 #" "
0 0 14 3 18 #"methods-applicable"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 8 #"meth-lst"
0 0 22 3 2 #") "
0 0 14 3 18 #"methods-applicable"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 17 #"                ("
0 0 14 3 22 #"get-applicable-methods"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 8 #"meth-lst"
0 0 22 3 2 #") "
0 0 14 3 10 #"params-lst"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 14 3 22 #"get-applicable-methods"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 8 #"meth-lst"
0 0 22 3 2 #") "
0 0 14 3 10 #"params-lst"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 35 #";; Verificar os metodos especificos"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 20 #"more-specific-method"
0 0 22 3 1 #" "
0 0 14 3 8 #"method-0"
0 0 22 3 1 #" "
0 0 14 3 8 #"method-1"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 24 #"more-specific-method-aux"
0 0 22 3 1 #" "
0 0 14 3 11 #"types-lst-0"
0 0 22 3 1 #" "
0 0 14 3 11 #"types-lst-1"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 22 3 3 #" (("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 11 #"types-lst-0"
0 0 22 3 2 #")("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 11 #"types-lst-1"
0 0 22 3 3 #")) "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 16 #"              (("
0 0 14 3 20 #"check-possible-cycle"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 11 #"types-lst-1"
0 0 22 3 3 #") ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 11 #"types-lst-0"
0 0 22 3 3 #")) "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 16 #"              (("
0 0 14 3 20 #"check-possible-cycle"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 11 #"types-lst-0"
0 0 22 3 3 #") ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 11 #"types-lst-1"
0 0 22 3 3 #")) "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 24 #"more-specific-method-aux"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 11 #"types-lst-0"
0 0 22 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 11 #"types-lst-1"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 24 #"more-specific-method-aux"
0 0 22 3 2 #" ("
0 0 14 3 29 #"concrete-method-types-ordered"
0 0 22 3 1 #" "
0 0 14 3 8 #"method-0"
0 0 22 3 2 #")("
0 0 14 3 29 #"concrete-method-types-ordered"
0 0 22 3 1 #" "
0 0 14 3 8 #"method-1"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 62
#";; Combine the results of executing all the applicable methods"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 18 #"method-combination"
0 0 22 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 22 3 1 #" "
0 0 14 3 15 #"list-applicable"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 12 #"apply-method"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"            "
0 0 14 3 5 #"empty"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 22 3 2 #" ("
0 0 14 3 20 #"concrete-method-func"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 3 #")) "
0 0 14 3 6 #"params"
0 0 22 3 3 #") ("
0 0 14 3 12 #"apply-method"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 3 #"lst"
0 0 22 3 2 #") "
0 0 14 3 6 #"params"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 22 3 2 #" ("
0 0 14 3 12 #"apply-method"
0 0 22 3 1 #" "
0 0 14 3 15 #"list-applicable"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 23 #";; No Aplicable Methods"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 20 #"no-applicable-method"
0 0 22 3 1 #" "
0 0 14 3 9 #"arguments"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 22 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Method"
0 0 19 3 1 #" "
0 0 19 3 7 #"missing"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 10 #"arguments\""
0 0 22 3 1 #" "
0 0 14 3 9 #"arguments"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 22 3 3 #" (("
0 0 14 3 6 #"empty?"
0 0 22 3 2 #" ("
0 0 14 3 22 #"get-applicable-methods"
0 0 22 3 1 #" "
0 0 14 3 12 #"methods-list"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 4 #")) ("
0 0 14 3 20 #"no-applicable-method"
0 0 22 3 1 #" "
0 0 14 3 6 #"params"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"          (("
0 0 14 3 6 #"empty?"
0 0 22 3 2 #" ("
0 0 14 3 32 #"concrete-method-combination-proc"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 12 #"methods-list"
0 0 22 3 5 #"))) ("
0 0 14 3 5 #"apply"
0 0 22 3 2 #" ("
0 0 14 3 20 #"concrete-method-func"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 22 3 1 #" "
0 0 14 3 18 #"methods-applicable"
0 0 22 3 1 #" "
0 0 14 3 20 #"more-specific-method"
0 0 22 3 4 #"))) "
0 0 14 3 6 #"params"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ("
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 18 #"method-combination"
0 0 22 3 2 #" ("
0 0 14 3 32 #"concrete-method-combination-proc"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 12 #"methods-list"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"sort"
0 0 22 3 1 #" "
0 0 14 3 18 #"methods-applicable"
0 0 22 3 1 #" "
0 0 14 3 20 #"more-specific-method"
0 0 22 3 2 #") "
0 0 14 3 6 #"params"
0 0 22 3 5 #")))))"
0           0
